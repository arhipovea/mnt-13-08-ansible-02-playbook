---
- name: Install Clickhouse
  hosts: clickhouse

  handlers:
    - name: Clickhouse | Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

  tasks:
    - block:
        - name: Clickhouse | Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Clickhouse | Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"

    - name: Clickhouse | Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Clickhouse | Start clickhouse service

    - name: Clickhouse | Config change (allow from everywhere)
      become: true
      ansible.builtin.lineinfile: dest=/etc/clickhouse-server/config.xml
                  regexp='^(.*)<listen_host>0.0.0.0</listen_host>(.*)$'
                  line='    <listen_host>0.0.0.0</listen_host>'
                  state=present
      notify: Clickhouse | Start clickhouse service

    - name: Clickhouse | Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Clickhouse | Starting clickhouse
      ansible.builtin.pause:
        seconds: 5

    - name: Clickhouse | Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;' -h 127.0.0.1"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector

  handlers:
    - name: Vector | Start vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
        daemon_reload: true

  tasks:
    - name: Vector | Get vector distrib
      ansible.builtin.get_url:
        url: "{{ vector_url }}"
        dest: "./vector-{{ vector_version }}-1.x86_64.rpm"
        mode: "0644"

    - name: Vector | Vector config
      ansible.builtin.template:
        src: vector.yml.j2
        dest: vector.yml
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        # validate: vector validate --no-environment --config-yaml %s

    - name: Vector | Create systemd unit
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /etc/systemd/system/vector.service
        mode: "0644"
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"

    - name: Vector | Install vector packages
      become: true
      ansible.builtin.yum:
        name:
          - vector-{{ vector_version }}-1.x86_64.rpm
      notify: Vector | Start vector service

- name: Install Lighthouse
  hosts: lighthouse

  handlers:
    - name: Lighthouse | Start nginx service
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted

  tasks:
    - name: Lighthouse | Install EPEL
      become: true
      ansible.builtin.yum:
        name:
          - epel-release
        state: present
        update_cache: true

    - name: Lighthouse | Install nginx
      become: true
      ansible.builtin.yum:
        name:
          - nginx
        state: present

    - name: Lighthouse | Create nginx config
      become: true
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: "0644"
      notify: Lighthouse | Start nginx service

    - name: Lighthouse | Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Lighthouse | Install git
      become: true
      ansible.builtin.yum:
        name:
          - git
        state: present

    - name: Lighthouse | Clone lighthouse
      become: true
      ansible.builtin.git:
        repo: "{{ lighthouse_uri }}"
        dest: "{{ lighthouse_dest }}"
